package Bierkopf.view;

import Bierkopf.model.Karte;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JToggleButton;

/**
 *
 * @author alex, yannik and lorenzo
 */
public class View extends javax.swing.JFrame {

    public HashMap<String, javax.swing.JToggleButton> buttonMap;

    /**
     * Creates new form View2
     */
    public View() {
        initComponents();
        buttonMap = new HashMap<String, javax.swing.JToggleButton>();

//        update();
    }

    public void updateHandkarten(List<Karte> handkarten) {
        buttonMap.put(handkarten.get(0).getKarte(), handkartePos1);
        buttonMap.put(handkarten.get(1).getKarte(), handkartePos2);
        buttonMap.put(handkarten.get(2).getKarte(), handkartePos3);
        buttonMap.put(handkarten.get(3).getKarte(), handkartePos4);
        buttonMap.put(handkarten.get(4).getKarte(), handkartePos5);
        buttonMap.put(handkarten.get(5).getKarte(), handkartePos6);

        gethandkartePos1().setIcon(updateCard(handkarten.get(0).getKarte()));
        gethandkartePos2().setIcon(updateCard(handkarten.get(1).getKarte()));
        gethandkartePos3().setIcon(updateCard(handkarten.get(2).getKarte()));
        gethandkartePos4().setIcon(updateCard(handkarten.get(3).getKarte()));
        gethandkartePos5().setIcon(updateCard(handkarten.get(4).getKarte()));
        gethandkartePos6().setIcon(updateCard(handkarten.get(5).getKarte()));

    }

    public JLabel getkarteUnten() {
        return karteUnten;
    }

    public JLabel getkarteOben() {
        return karteOben;
    }

    public JLabel getkarteRechts() {
        return karteRechts;
    }

    public JLabel getkarteLinks() {
        return karteLinks;
    }

    public JPanel gethandkartenPanel() {
        return handkartenPanel;
    }

    public JPanel getspieltischPanel() {
        return spieltischPanel;
    }

    public JToggleButton gethandkartePos1() {
        return handkartePos1;
    }

    public JToggleButton gethandkartePos2() {
        return handkartePos2;
    }

    public JToggleButton gethandkartePos3() {
        return handkartePos3;
    }

    public JToggleButton gethandkartePos4() {
        return handkartePos4;
    }

    public JToggleButton gethandkartePos5() {
        return handkartePos5;
    }

    public JToggleButton gethandkartePos6() {
        return handkartePos6;
    }

    public void addSpieleKarte1Listener(ActionListener karte1) {
        handkartePos1.addActionListener(karte1);
    }

    public Image scaleImage(Image image, int w, int h) {

        Image scaled = image.getScaledInstance(w, h, Image.SCALE_SMOOTH);

        return scaled;
    }

    public RotatedIcon rotateIcon(ImageIcon originialIcon) {
        RotatedIcon ri = new RotatedIcon(originialIcon);
        return ri;
    }

    public ImageIcon createImageIcon(String path, int scale_factor) {
        java.net.URL imgURL = View.class.getResource(path);
        if (imgURL != null) {
            ImageIcon originalIcon = new ImageIcon(imgURL);
            int width = originalIcon.getIconWidth() / scale_factor;
            int height = originalIcon.getIconHeight() / scale_factor;

            Image scaled = scaleImage(originalIcon.getImage(), width, height);

            return new ImageIcon(scaled);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }

    public ImageIcon updateCard(String kartenname) {
        String kartenPfad = String.format("cards/%s.png", kartenname);
        System.out.println(kartenPfad);
        ImageIcon cardImage = createImageIcon(kartenPfad, 3);
        return cardImage;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        handkartenPanel = new javax.swing.JPanel();
        handkartePos1 = new javax.swing.JToggleButton();
        handkartePos2 = new javax.swing.JToggleButton();
        handkartePos3 = new javax.swing.JToggleButton();
        handkartePos4 = new javax.swing.JToggleButton();
        handkartePos5 = new javax.swing.JToggleButton();
        handkartePos6 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        userText = new javax.swing.JLabel();
        spieltischPanel = new javax.swing.JPanel();
        karteUnten = new javax.swing.JLabel();
        karteOben = new javax.swing.JLabel();
        karteRechts = new javax.swing.JLabel();
        karteLinks = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bandit");

        handkartenPanel.setPreferredSize(new java.awt.Dimension(685, 250));

        handkartePos1.setText("");

        handkartePos2.setText("");

        handkartePos3.setText("");

        handkartePos4.setText("");

        handkartePos5.setText("");

        handkartePos6.setText("");

        userText.setText("jLabel5");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(userText)
                .addContainerGap(554, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(userText))
        );

        javax.swing.GroupLayout handkartenPanelLayout = new javax.swing.GroupLayout(handkartenPanel);
        handkartenPanel.setLayout(handkartenPanelLayout);
        handkartenPanelLayout.setHorizontalGroup(
            handkartenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(handkartenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(handkartenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(handkartenPanelLayout.createSequentialGroup()
                        .addComponent(handkartePos1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handkartePos2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handkartePos3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handkartePos4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handkartePos5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handkartePos6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(410, Short.MAX_VALUE))
        );
        handkartenPanelLayout.setVerticalGroup(
            handkartenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(handkartenPanelLayout.createSequentialGroup()
                .addGroup(handkartenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(handkartePos1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handkartePos2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handkartePos3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handkartePos4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handkartePos5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handkartePos6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(handkartenPanel, java.awt.BorderLayout.PAGE_END);

        spieltischPanel.setLayout(new java.awt.GridBagLayout());

        karteUnten.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        karteUnten.setText("Karten_unten");
        karteUnten.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        karteUnten.setMaximumSize(new java.awt.Dimension(75, 100));
        karteUnten.setMinimumSize(new java.awt.Dimension(75, 100));
        karteUnten.setPreferredSize(new java.awt.Dimension(75, 100));
        karteUnten.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        spieltischPanel.add(karteUnten, gridBagConstraints);

        karteOben.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        karteOben.setText("Karte_oben");
        karteOben.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        karteOben.setMaximumSize(new java.awt.Dimension(75, 100));
        karteOben.setMinimumSize(new java.awt.Dimension(75, 100));
        karteOben.setPreferredSize(new java.awt.Dimension(75, 100));
        karteOben.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        spieltischPanel.add(karteOben, gridBagConstraints);

        karteRechts.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        karteRechts.setText("Karte_rechts");
        karteRechts.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        karteRechts.setMaximumSize(new java.awt.Dimension(100, 75));
        karteRechts.setMinimumSize(new java.awt.Dimension(100, 75));
        karteRechts.setPreferredSize(new java.awt.Dimension(100, 75));
        karteRechts.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        spieltischPanel.add(karteRechts, gridBagConstraints);

        karteLinks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        karteLinks.setText("Karte_links");
        karteLinks.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        karteLinks.setMaximumSize(new java.awt.Dimension(100, 75));
        karteLinks.setMinimumSize(new java.awt.Dimension(100, 75));
        karteLinks.setPreferredSize(new java.awt.Dimension(100, 75));
        karteLinks.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        spieltischPanel.add(karteLinks, gridBagConstraints);

        getContentPane().add(spieltischPanel, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1182, 664));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton handkartePos1;
    private javax.swing.JToggleButton handkartePos2;
    private javax.swing.JToggleButton handkartePos3;
    private javax.swing.JToggleButton handkartePos4;
    private javax.swing.JToggleButton handkartePos5;
    private javax.swing.JToggleButton handkartePos6;
    private javax.swing.JPanel handkartenPanel;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel karteLinks;
    private javax.swing.JLabel karteOben;
    private javax.swing.JLabel karteRechts;
    private javax.swing.JLabel karteUnten;
    private javax.swing.JPanel spieltischPanel;
    private javax.swing.JLabel userText;
    // End of variables declaration//GEN-END:variables
}
